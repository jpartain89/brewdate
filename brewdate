#!/bin/bash -e

# Single-worded command to - for now as of 3.20.16 at 7:14 am -
# update, upgrade, cleanup and "doctor" homebrew and brew cask.

# Now self-installs

# Copyright Â© 2017 JPCDI, JPartain89 and Justin Partain
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Program information
PROGRAM_NAME="brewdate"
VERSION="2.8.3"

-e /usr/libexec/path_helper >/dev/null 2>&1 && \
/usr/libexec/path_helper >/dev/null 2>&1

if [[ ! -e "$(command -v allunix)" ]]; then
    echo "AllUnix file is missing."
    wget -O - http://bit.ly/jp_allunix | bash
fi

. "$(command -v allunix)" &&
git_local_bin_install &&
no_sudo &&

function ERROR {
cat << EOF
${WARNING}Sorry, it seems we have caught some sort of error, or you${NORMAL}
${WARNING}sent a 'kill' command to ${PROGRAM_NAME}.${NORMAL}
${WARNING}  Now exiting.${NORMAL}
EOF
}

trap 'ERROR; exit $?' SIGHUP SIGINT SIGTERM
trap 'exit 0' EXIT

function brew_var {
    echo ""
    echo "${CYAN}Brew Update${NORMAL}"
    echo ""
    /usr/local/bin/brew update;
    echo ""
    echo "${RED}Brew Upgrade${NORMAL}"
    echo ""
    /usr/local/bin/brew upgrade && echo "Completed/Nothing to do"
    echo ""
    echo "${GRAY}Brew Cleanup${NORMAL}"
    echo ""
    /usr/local/bin/brew cleanup && echo "Completed/Nothing to do"
    echo ""
    echo "${GREEN}Brew Prune${NORMAL}"
    echo ""
    /usr/local/bin/brew prune && echo "Completed/Nothing to do"
    echo ""
    echo "${MAGENTA}Brew Doctor${NORMAL}"
    echo ""
    /usr/local/bin/brew doctor;
    echo ""
    echo "${BLUE}Brew Cask Cleanup${NORMAL}"
    echo ""
    /usr/local/bin/brew cask cleanup;
    echo ""
    echo "${PURPLE}Brew Cask Doctor${NORMAL}"
    echo ""
    /usr/local/bin/brew cask doctor
}

function brew_quiet {
    exec &> >( &> "${HOME}/log/brewdate.log" 2>&1 )
    /usr/local/bin/brew update;
    /usr/local/bin/brew upgrade;
    /usr/local/bin/brew cleanup;
    /usr/local/bin/brew prune;
    /usr/local/bin/brew doctor;
    /usr/local/bin/brew cask cleanup;
    /usr/local/bin/brew cask doctor;
}

function help_text {
cat << EOF
Usage: brewdate
[ -h, --help | -V, --version | -q, --quiet ]

This is a simple wrapper script that just auto-runs:

    brew update
    brew upgrade
    brew cleanup
    brew prune
    brew doctor
    brew cask update
    brew cask cleanup
        and
    brew cask doctor

The -q and --quiet options attempt to silence ALL output into a log file.
EOF
}

while [ $# -ge 1 ]; do
    case "$1" in
        -h | --help )
            help_text; exit 0
        ;;
        -V | --version )
            HELP_VERSION; exit 0
        ;;
        -q | --quiet )
            brew_quiet; exit 0
        ;;
        * )
            ERROR; exit 1
        ;;
    esac
done

brew_var; EXIT_NORM
