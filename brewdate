#!/bin/bash -e

# Single-worded command to - for now as of 3.20.16 at 7:14 am -
# update, upgrade, cleanup and "doctor" homebrew and brew cask.

# Now self-installs

# Copyright Â© 2017-2019 JPCDI, JPartain89 and Justin Partain
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Program information
PROGRAM_NAME="brewdate"
VERSION="3.1.0"

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

BREW="$(command -v brew)"

# This "auto-installs" the program into /usr/local/bin for ya!
command -v "$PROGRAM_NAME" 1>/dev/null 2>&1 || {
    (
        if [ -x "${DIR}/${PROGRAM_NAME}" ]; then
            sudo ln -svf "${DIR}/${PROGRAM_NAME}" "/usr/local/bin/${PROGRAM_NAME}"
            sudo chmod -R 0775 "/usr/local/bin/${PROGRAM_NAME}"
        else
            echo "For some reason, linking $PROGRAM_NAME to /usr/local/bin,"
            echo "failed. My apologies for not being able to figure it out..."
            exit 1
        fi
    )
}

if [[ $EUID == 0 ]]; then
    echo ""
    echo "Sorry, you can't use sudo in this script. "
    echo "Press enter to exit."
    press_enter
    exit 1
fi

function onError() {
    status=$?
    script=$0
    line=$1
    shift
    args=
    for i in "$@"; do
        args+="\"$i\" "
    done

cat <<- EOF

------------------------------------------------------------
Error occured on "$script" [Line "$line"]: Status $status

PID: $$
User: "$USER"
Current directory: "$PWD"
Command line: "$script $args"
------------------------------------------------------------

EOF
}

trap 'onError $LINENO "$@"' ERR

function brew_var() {
    echo ""
    echo "Brew Update"
    echo ""
    "${BREW}" update;
    echo ""
    echo "Brew Upgrade"
    echo ""
    "${BREW}" upgrade && echo "Completed/Nothing to do"
    echo ""
    echo "Brew Cleanup"
    echo ""
    "${BREW}" cleanup && echo "Completed/Nothing to do"
    echo ""
    echo "Brew Doctor"
    echo ""
    "${BREW}" doctor;
    echo ""
    echo "Brew Cask Doctor"
    echo ""
    "${BREW}" cask doctor
}

function help_text() {
cat << EOF
Usage: brewdate
[ -h, --help ]

This is a simple wrapper script that just auto-runs:

    brew update
    brew upgrade
    brew cleanup
    brew prune
    brew doctor
    brew cask update
        and
    brew cask doctor
EOF
}

if [ $# -ge 1 ]; then
    while [ $# -ge 1 ]; do
        case "$1" in
            -h | --help )
                help_text; exit 0;;
            * ) help_text; exit 1;;
        esac
    done
else
    brew_var
fi
